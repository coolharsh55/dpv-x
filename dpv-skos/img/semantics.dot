# semantics 01

digraph G {
    rankdir=BT;
    node [style=filled,shape=rect,fillcolor=yellow];
    
    Purpose [fillcolor=goldenrod];
    rdfsClass [shape=ellipse,fillcolor=none];
    rdfsClass -> Purpose [label="rdf:type",arrowtail=vee,dir=back];
    ServiceProvision, RequestedServiceProvision -> Purpose [arrowhead=vee,label="rdf:type"] ;
    ServiceProvision -> RequestedServiceProvision [arrowtail=onormal,label="skos:broaderTransitive",dir=back];
    
    Thing [fillcolor=none,shape=egg];
    hasPurpose [shape=ellipse,fillcolor=azure];
    hasPurpose -> Purpose [label="rdfs:range",arrowhead=vee];
    hasPurpose -> rdfProperty [label="rdf:type"arrowhead=vee];
    rdfProperty [label="rdf:Property",shape=ellipse,fillcolor=none];
    { rank=same; note; dummy }
    dummy [shape=point, width=0];
    Thing -> dummy [arrowhead=none];
    dummy -> note [dir=back,style=dotted,arrowtail=none];
    dummy -> RequestedServiceProvision [label=" hasPurpose"] ;
    Thing -> ServiceProvision [label=" hasPurpose"] ;
    note [shape=note,fillcolor=beige,label="valid as these concepts are\ninstances of dpv:Purpose"];
}

# semantics 02

digraph G {
    // rankdir=BT;
    node [style=filled,shape=rect,fillcolor=yellow];
    
    Processor, DataController -> LegalEntity -> Entity [label="rdfs:subClassOf",arrowhead=onormal] ;
    
    Thing [fillcolor=none,shape=egg];
    Thing -> Entity [label="dpvs:hasEntity"] ;
    Thing -> DataController [label="dpvs:hasDataController"] ;
    Thing -> Processor [label="dpvs:hasDataProcessor"] ;
}